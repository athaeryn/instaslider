// Generated by CoffeeScript 1.6.3
(function() {
  var InstaSlider,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  InstaSlider = (function() {
    function InstaSlider(options) {
      this.options = options;
      this._processFeed = __bind(this._processFeed, this);
      this._createInstafeed = __bind(this._createInstafeed, this);
    }

    InstaSlider.prototype.run = function() {
      var feed;
      feed = this._createInstafeed();
      return feed.run();
    };

    InstaSlider.prototype._createInstafeed = function() {
      this.options.mock = true;
      this.options.success = this._processFeed;
      return new Instafeed(this.options);
    };

    InstaSlider.prototype._createHashtagFilter = function(hashtag) {
      return function(e) {
        return e.tags.indexOf(hashtag) > -1;
      };
    };

    InstaSlider.prototype._feedDataToImgEl = function(data) {
      var url;
      url = data.images.standard_resolution.url;
      return $('<img>', {
        src: url
      });
    };

    InstaSlider.prototype._addImageToPage = function($img) {
      return $('#instaslider').append($img);
    };

    InstaSlider.prototype._processFeed = function(response) {
      var data, filteredData, hashtagFilter, images;
      data = response.data;
      if (this.options.filter != null) {
        hashtagFilter = this._createHashtagFilter(this.options.filter);
        filteredData = data.filter(hashtagFilter);
        images = filteredData.map(this._feedDataToImgEl);
      } else {
        images = data.map(this._feedDataToImgEl);
      }
      return images.forEach(this._addImageToPage);
    };

    return InstaSlider;

  })();

  window.InstaSlider = InstaSlider;

}).call(this);
